* Package Manager
#+BEGIN_SRC emacs-lisp
  (setq package-archives '(("melpa" . "http://melpa.org/packages/")
                           ("org"   . "http://orgmode.org/elpa/")))
  (unless (package-installed-p 'use-package)
    (package-refresh-contents)
    (package-install 'use-package))
  (setq-default use-package-always-ensure t)
#+END_SRC
* Better Defaults
** Auto-save && Backup files
#+BEGIN_SRC emacs-lisp
  (use-package super-save
    :config
    (super-save-mode +1)
    :init
    (setq super-save-auto-save-when-idle t)
    (setq auto-save-default nil)
    (setq make-backup-files nil))
#+END_SRC
** Save/Restore session
#+BEGIN_SRC emacs-lisp
(desktop-save-mode 1)
#+END_SRC
** Frame title format
#+BEGIN_SRC emacs-lisp
(setq-default frame-title-format '("%b"))
#+END_SRC
* Appearance
** Fonts
#+BEGIN_SRC emacs-lisp
  ;;(set-face-attribute 'default nil :font "Operator Mono")
  ;;(set-fontset-font t nil "Symbols Nerd Font" nil 'append)
  ;;(set-fontset-font t nil "Noto Color Emoji" nil 'append)
#+END_SRC
** Theme
#+BEGIN_SRC emacs-lisp
 (use-package doom-themes
  :config (load-theme 'doom-nord t))
#+END_SRC
** Window
#+BEGIN_SRC emacs-lisp
  (when window-system
    (menu-bar-mode 1)
    (scroll-bar-mode -1)
    (tool-bar-mode -1)
    (tooltip-mode -1)
    (setq-default mode-line-format nil))
#+END_SRC
** Defaults
#+BEGIN_SRC emacs-lisp
  (setq inhibit-startup-message t)
  (setq org-startup-indented t)
  (global-visual-line-mode t)
#+END_SRC
* Keybindings
#+BEGIN_SRC emacs-lisp
  (cua-mode t) ;; C-x: Cut; C-c: Copy; C-v: Paste
  (global-set-key (kbd "C-s") 'save-buffer)
  (global-set-key (kbd "C-S-s") 'save-some-buffers)
  (global-set-key (kbd "C-a") 'mark-whole-buffer)
  (global-set-key (kbd "C-o") 'find-file)
  (use-package undo-fu
    :bind (("C-z" . undo-fu-only-undo)
           ("C-y" . undo-fu-only-redo)))
#+END_SRC
* Org-mode
** Packages
#+BEGIN_SRC emacs-lisp
  (use-package rainbow-delimiters
    :ensure t
    :hook (prog-mode . rainbow-delimiters-mode))
  (use-package org-bullets
    :ensure t
    :hook (org-mode . org-bullets-mode))
#+END_SRC
** Cross out done items.
#+BEGIN_SRC emacs-lisp
(defun my/modify-org-done-face ()
  (setq org-fontify-done-headline t)
  (set-face-attribute 'org-done nil :strike-through t)
  (set-face-attribute 'org-headline-done nil
                      :strike-through t
                      :foreground "light gray"))

(eval-after-load "org"
  (add-hook 'org-add-hook 'my/modify-org-done-face))
#+END_SRC
* To Do
** DONE Test
** TODO Organize
** TODO Switch Night/Day theme
** TODO C-s -> org-babel-load-file .emacs.d/config.org
** TODO Font + Emojis
** TODO Reload config.org on save
